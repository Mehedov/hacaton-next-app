'use client'

import React, { useState } from 'react'
import { IServerResponse } from '@/types/generate.type'
import {
	BookOpen,
	HelpCircle,
	ChevronLeft,
	ChevronRight,
	CheckCircle,
	Clock,
	ArrowRight,
	Book,
	Microscope,
	Lightbulb,
	RefreshCw,
	List,
	X
} from 'lucide-react'

interface InteractiveTooltipsProps {
	data: IServerResponse | null
	currentStep: number
	isVisible: boolean
	onStepChange?: (step: number) => void
}

interface TooltipInfo {
	id: string
	title: string
	content: string
	technical: string
	examples: string[]
	icon: string
	color: string
}

const InteractiveTooltips: React.FC<InteractiveTooltipsProps> = ({
	data,
	currentStep,
	isVisible,
	onStepChange,
}) => {
	const [showTechnical, setShowTechnical] = useState(false)

	const tooltips: TooltipInfo[] = React.useMemo(() => {
		if (!data) return []

		return [
			{
				id: 'entropy-collection',
				title: '–°–±–æ—Ä —ç–Ω—Ç—Ä–æ–ø–∏–∏',
				content: '–≠–Ω—Ç—Ä–æ–ø–∏—è ‚Äî —ç—Ç–æ –º–µ—Ä–∞ –±–µ—Å–ø–æ—Ä—è–¥–∫–∞ –∏ –Ω–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ—Å—Ç–∏. –ú—ã –ø–æ–ª—É—á–∞–µ–º –µ—ë –æ—Ç –∞–≤—Ç–æ—Ä–∏—Ç–µ—Ç–Ω–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ NIST –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–ª—É—á–∞–π–Ω–æ—Å—Ç–∏.',
				technical: 'NIST Randomness Beacon –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —ç–Ω—Ç—Ä–æ–ø–∏–π–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–≤–∞–Ω—Ç–æ–≤—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∏ –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–≥–æ —à—É–º–∞. –ö–∞–∂–¥—ã–π –±–∏—Ç –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ö–æ–¥–∏—Ç —Å—Ç—Ä–æ–≥—É—é –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫—É—é –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é.',
				examples: [
					'–ö–≤–∞–Ω—Ç–æ–≤—ã–µ —Ñ–ª—É–∫—Ç—É–∞—Ü–∏–∏',
					'–ê—Ç–º–æ—Å—Ñ–µ—Ä–Ω—ã–π —à—É–º',
					'–†–∞–¥–∏–æ–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–∞—Å–ø–∞–¥',
					'–ö—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏'
				],
				icon: 'üîó',
				color: '#ef4444',
			},
			{
				id: 'genesis-hash',
				title: 'Genesis Hash',
				content: '–ù–∞—á–∞–ª—å–Ω—ã–π —Ö—ç—à –±–ª–æ–∫—á–µ–π–Ω–∞ —Å–ª—É–∂–∏—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–æ–º —ç–Ω—Ç—Ä–æ–ø–∏–∏ –∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Å–≤—è–∑—å —Å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–π —Å–µ—Ç—å—é.',
				technical: 'Genesis Hash ‚Äî —ç—Ç–æ —Ö—ç—à –ø–µ—Ä–≤–æ–≥–æ –±–ª–æ–∫–∞ –≤ –±–ª–æ–∫—á–µ–π–Ω–µ. –û–Ω –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–µ—Ç–∏ –∏ –æ—Å—Ç–∞—ë—Ç—Å—è –Ω–µ–∏–∑–º–µ–Ω–Ω—ã–º, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—è —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ —ç–Ω—Ç—Ä–æ–ø–∏–∏.',
				examples: [
					'–ë–ª–æ–∫ #0 –≤ Bitcoin',
					'Genesis –±–ª–æ–∫ Ethereum',
					'–ü–µ—Ä–≤—ã–π –±–ª–æ–∫ –ª—é–±–æ–π —Ü–µ–ø–æ—á–∫–∏',
					'–ö–æ—Ä–Ω–µ–≤–æ–π —Ö—ç—à —Å–µ—Ç–∏'
				],
				icon: '‚ö°',
				color: '#8b5cf6',
			},
			{
				id: 'uuid-generation',
				title: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è UUID',
				content: 'UUID (Universally Unique Identifier) —Å–æ–∑–¥–∞—ë—Ç—Å—è –∫–∞–∫ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, —Ç–∞–∫ –∏ –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–ø—Ä–æ—Å–∞.',
				technical: 'UUID v4 –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏ —Å–∏–ª—å–Ω–æ–≥–æ –ø—Å–µ–≤–¥–æ—Å–ª—É—á–∞–π–Ω–æ–≥–æ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞. –í–µ—Ä—Å–∏—è 4 UUID —Å–æ–¥–µ—Ä–∂–∏—Ç 122 –±–∏—Ç–∞ —Å–ª—É—á–∞–π–Ω–æ—Å—Ç–∏.',
				examples: [
					'550e8400-e29b-41d4-a716-446655440000',
					'123e4567-e89b-12d3-a456-426614174000',
					'–ö–ª–∏–µ–Ω—Ç—Å–∫–∏–π UUID',
					'–°–µ—Ä–≤–µ—Ä–Ω—ã–π UUID'
				],
				icon: 'üé≤',
				color: '#22c55e',
			},
			{
				id: 'salt-addition',
				title: '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–ª–∏',
				content: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å–æ–ª—å (extra salt) –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–π —Å—Ç–æ–π–∫–æ—Å—Ç–∏ –∏ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∞—Ç–∞–∫.',
				technical: '–°–æ–ª—å ‚Äî —ç—Ç–æ —Å–ª—É—á–∞–π–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –¥–æ–±–∞–≤–ª—è–µ–º—ã–µ –∫ —Ö—ç—à–∏—Ä—É–µ–º—ã–º –¥–∞–Ω–Ω—ã–º –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∞—Ç–∞–∫ –ø–æ —Å–ª–æ–≤–∞—Ä—é –∏ rainbow table. –î–ª–∏–Ω–∞ —Å–æ–ª–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –º–∏–Ω–∏–º—É–º 128 –±–∏—Ç.',
				examples: [
					'–ö—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∞—è —Å–æ–ª—å',
					'–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —ç–Ω—Ç—Ä–æ–ø–∏—è',
					'–ó–∞—â–∏—Ç–∞ –æ—Ç –∫–æ–ª–ª–∏–∑–∏–π',
					'–£–ª—É—á—à–µ–Ω–∏–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è'
				],
				icon: 'üßÇ',
				color: '#f59e0b',
			},
			{
				id: 'hash-combination',
				title: '–ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ö—ç—à–µ–π',
				content: '–í—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ —ç–Ω—Ç—Ä–æ–ø–∏–∏ –æ–±—ä–µ–¥–∏–Ω—è—é—Ç—Å—è —Å –ø–æ–º–æ—â—å—é –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–π —Ö—ç—à-—Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –µ–¥–∏–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è.',
				technical: '–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è SHA-256 –¥–ª—è –¥–µ—Ç–µ—Ä–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ —ç–Ω—Ç—Ä–æ–ø–∏–∏. –§—É–Ω–∫—Ü–∏—è avalanche effect –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫ –≤—Ö–æ–¥–Ω—ã–º –∏–∑–º–µ–Ω–µ–Ω–∏—è–º.',
				examples: [
					'SHA-256 –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ',
					'XOR –æ–ø–µ—Ä–∞—Ü–∏–∏',
					'–ö–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö',
					'–ö—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ —Å–º–µ—à–∏–≤–∞–Ω–∏–µ'
				],
				icon: 'üîó',
				color: '#06b6d4',
			},
			{
				id: 'final-output',
				title: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞',
				content: '–§–∏–Ω–∞–ª—å–Ω—ã–µ —Å–ª—É—á–∞–π–Ω—ã–µ —á–∏—Å–ª–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —ç–Ω—Ç—Ä–æ–ø–∏–∏.',
				technical: '–ê–ª–≥–æ—Ä–∏—Ç–º –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —ç–Ω—Ç—Ä–æ–ø–∏–∏ –∫–∞–∫ seed –¥–ª—è –¥–µ—Ç–µ—Ä–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Å–µ–≤–¥–æ—Å–ª—É—á–∞–π–Ω–æ–≥–æ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞. –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç—Å—è —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤ –∑–∞–¥–∞–Ω–Ω–æ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–µ.',
				examples: [
					'–ß–∏—Å–ª–∞ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ [1, 100]',
					'–ö—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∞—è —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å',
					'–†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ',
					'–ú–∞—Å—Å–∏–≤ —Å–ª—É—á–∞–π–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π'
				],
				icon: 'üéØ',
				color: '#10b981',
			},
		]
	}, [data])

	const currentTooltip = tooltips[currentStep] || tooltips[0]

	if (!isVisible) {
		return null
	}

	return (
		<div className='bg-white rounded-2xl shadow-lg p-8 border-2 border-purple-200'>
			{/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –±–ª–æ–∫–∞ */}
			<div className='mb-6'>
				<h3 className='text-2xl font-bold text-gray-800 mb-2 flex items-center gap-2'>
					<BookOpen className="w-8 h-8" />
					<span>–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏</span>
				</h3>
				<p className='text-gray-600'>
					–î–µ—Ç–∞–ª—å–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ —ç—Ç–∞–ø–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª
				</p>
			</div>

			{/* –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è */}
			<div className='absolute top-4 right-4'>
				<button
					onClick={() => {
						// –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è –±–ª–æ–∫–∞ —á–µ—Ä–µ–∑ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
					}}
					className='w-8 h-8 bg-gray-400 hover:bg-gray-500 text-white rounded-full flex items-center justify-center font-bold transition-colors duration-200 opacity-50 cursor-not-allowed'
				>
					<X className="w-4 h-4" />
				</button>
			</div>

			{/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –±–ª–æ–∫–∞ */}
			<div className='max-h-350 overflow-y-auto'>
				{currentTooltip && (
					<div className='space-y-4'>
						{/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —ç—Ç–∞–ø–∞ */}
						<div
							className='p-4 rounded-xl border-2'
							style={{
								backgroundColor: currentTooltip.color + '15',
								borderColor: currentTooltip.color,
							}}
						>
							<div className='flex items-center gap-3 mb-3'>
								<div
									className='w-12 h-12 rounded-full flex items-center justify-center text-xl'
									style={{ backgroundColor: currentTooltip.color }}
								>
									{currentTooltip.icon}
								</div>
								<div>
									<h4 className='font-bold text-gray-800 text-lg'>
										{currentTooltip.title}
									</h4>
									<div className='text-sm text-gray-600'>
										–≠—Ç–∞–ø {currentStep + 1} –∏–∑ {tooltips.length}
									</div>
								</div>
							</div>
						</div>

						{/* –û—Å–Ω–æ–≤–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ */}
						<div className='bg-blue-50 p-4 rounded-lg border-l-4 border-blue-400'>
							<h5 className='font-semibold text-gray-800 mb-2 flex items-center gap-2'>
								<Book className="w-5 h-5" />
								<span>–ü—Ä–æ—Å—Ç–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ:</span>
							</h5>
							<p className='text-gray-700 leading-relaxed'>
								{currentTooltip.content}
							</p>
						</div>

						{/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ç–µ—Ö/–ø—Ä–æ—Å—Ç–æ–µ */}
						<div className='flex justify-center'>
							<button
								onClick={() => setShowTechnical(!showTechnical)}
								className='px-4 py-2 bg-gray-100 hover:bg-gray-200 rounded-lg text-sm font-medium transition-colors duration-200 flex items-center gap-2'
							>
								{showTechnical ? (
									<>
										<Book className="w-4 h-4" />
										<span>–ü—Ä–æ—Å—Ç–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ</span>
									</>
								) : (
									<>
										<Microscope className="w-4 h-4" />
										<span>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏</span>
									</>
								)}
							</button>
						</div>

						{/* –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
						{showTechnical && (
							<div className='bg-gray-50 p-4 rounded-lg border-l-4 border-gray-400'>
								<h5 className='font-semibold text-gray-800 mb-2 flex items-center gap-2'>
									<Microscope className="w-5 h-5" />
									<span>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏:</span>
								</h5>
								<p className='text-sm text-gray-700 leading-relaxed'>
									{currentTooltip.technical}
								</p>
							</div>
						)}

						{/* –ü—Ä–∏–º–µ—Ä—ã */}
						<div className='bg-green-50 p-4 rounded-lg border-l-4 border-green-400'>
							<h5 className='font-semibold text-gray-800 mb-3 flex items-center gap-2'>
								<Lightbulb className="w-5 h-5" />
								<span>–ü—Ä–∏–º–µ—Ä—ã:</span>
							</h5>
							<div className='space-y-2'>
								{currentTooltip.examples.map((example, index) => (
									<div key={index} className='flex items-center gap-2'>
										<div className='w-2 h-2 bg-green-500 rounded-full'></div>
										<span className='text-sm text-gray-700'>{example}</span>
									</div>
								))}
							</div>
						</div>

						{/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–∂–¥—É —ç—Ç–∞–ø–∞–º–∏ */}
						<div className='bg-white border rounded-lg p-4'>
							<h5 className='font-semibold text-gray-800 mb-3 flex items-center gap-2'>
								<RefreshCw className="w-5 h-5" />
								<span>–ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —ç—Ç–∞–ø–∞–º:</span>
							</h5>
							<div className='grid grid-cols-2 gap-2'>
								<button
									onClick={() => onStepChange?.(Math.max(0, currentStep - 1))}
									disabled={currentStep === 0}
									className='px-3 py-2 bg-blue-500 hover:bg-blue-600 disabled:bg-gray-300 text-white rounded-lg text-sm font-medium transition-colors duration-200 flex items-center justify-center gap-1'
								>
									<ChevronLeft className="w-4 h-4" />
									<span>–ù–∞–∑–∞–¥</span>
								</button>
								<button
									onClick={() => onStepChange?.(Math.min(tooltips.length - 1, currentStep + 1))}
									disabled={currentStep === tooltips.length - 1}
									className='px-3 py-2 bg-blue-500 hover:bg-blue-600 disabled:bg-gray-300 text-white rounded-lg text-sm font-medium transition-colors duration-200 flex items-center justify-center gap-1'
								>
									<span>–í–ø–µ—Ä—ë–¥</span>
									<ChevronRight className="w-4 h-4" />
								</button>
							</div>
						</div>

						{/* –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —ç—Ç–∞–ø–æ–≤ */}
						<div className='bg-gray-50 rounded-lg p-4 '>
							<h5 className='font-semibold text-gray-800 mb-3 flex items-center gap-2'>
								<List className="w-5 h-5" />
								<span>–í—Å–µ —ç—Ç–∞–ø—ã –ø—Ä–æ—Ü–µ—Å—Å–∞:</span>
							</h5>
							<div className='space-y-2 max-h-204 overflow-y-auto'>
								{tooltips.map((tooltip, index) => (
									<div
										key={tooltip.id}
										onClick={() => onStepChange?.(index)}
										className={`p-3 rounded-lg border-2 cursor-pointer transition-all duration-300 ${
											index === currentStep
												? 'border-blue-500 bg-blue-50'
												: 'border-gray-200 bg-white hover:border-gray-300'
										}`}
									>
										<div className='flex items-center gap-3'>
											<div
												className={`w-6 h-6 rounded-full flex items-center justify-center text-xs font-bold ${
													index === currentStep
														? 'bg-blue-500 text-white'
														: 'bg-gray-300 text-gray-600'
												}`}
											>
												{index < currentStep ? (
													<CheckCircle className="w-4 h-4" />
												) : (
													index + 1
												)}
											</div>
											<div className='flex-1'>
												<h6 className='font-semibold text-gray-800 text-sm'>
													{tooltip.title}
												</h6>
												<p className='text-xs text-gray-600'>
													{tooltip.content.substring(0, 60)}...
												</p>
											</div>
											<div className='text-lg'>{tooltip.icon}</div>
										</div>
									</div>
								))}
							</div>
						</div>
					</div>
				)}
			</div>
		</div>
	)
}

export default InteractiveTooltips